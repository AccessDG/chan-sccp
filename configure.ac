dnl FILE: chan-sccp-b configure file
dnl COPYRIGHT: chan-sccp-b.sourceforge.net group 2009
dnl CREATED BY: Created by Diederik de Groot
dnl LICENSE: This program is free software and may be modified and distributed under the terms of the GNU Public License.
dnl          See the LICENSE file at the top of the source tree.
dnl DATE: $Date$
dnl REVISION: $Revision$
dnl NOTE: Process this file with autoconf to produce a configure script.
AC_PREREQ(2.53)
AC_INIT([Chan_SCCP],
        [3.0_TRUNK],
        [https://sourceforge.net/projects/chan-sccp-b/],
        [Chan_SCCP])

AC_CONFIG_AUX_DIR([autoconf])
AC_CONFIG_MACRO_DIR([autoconf])

dnl Get version information from repository
CS_GET_VERSION([.])

dnl cross-compile macros
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET 

AC_CONFIG_HEADER(src/config.h)


AH_TOP([
/*!
 * \file 	config.h
 * \brief 	SCCP Config File
 * \author 	Diederik de Groot <dkgroot [at] talon.nl>
 * \note	This file is automatically generated by configure
 * \note 	Do not change this file. Change will be lost when running configure
 */

#ifndef CHAN_SCCP_CONFIG_H
#define CHAN_SCCP_CONFIG_H
])

CONFIGURE_PART([Checking AutoMake:])
AM_INIT_AUTOMAKE([1.9 -Wno-portability check-news dist-bzip2 dist-tarZ no-define nostdinc])
m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])
AM_DISABLE_STATIC([])

# check existence of the package
AC_CONFIG_SRCDIR([src/chan_sccp.c]) 
AC_COPYRIGHT("Chan_SCCP")
AC_REVISION($Revision$) 
# Build paths and variables

dnl Create the relevant Build variables
AC_PATH_TOOL([UNAME], [uname], No)
AC_PATH_PROGS(DATE,date,[echo date not found so no daten info will be available])
AC_PATH_PROGS(UNAME,uname,[echo uname not found so no version info will be available])
AC_PATH_PROGS(WHOAMI,whoami,[echo whoami not found so no builduser info will be available])
AC_PATH_PROGS(FINGER,finger,[echo finger not found so no builduser info will be available])
AC_PATH_PROGS(HEAD,head,[echo finger not found so no builduser info will be available])
AC_PATH_PROGS(CUT,cut,[echo finger not found so no builduser info will be available])
AC_PATH_PROGS(AWK,awk,[echo awk not found so no builduser info will be available])
if test ! x"${UNAME}" = xNo; then
    if test -n $BUILD_OS ; then
        BUILD_DATE="`date -u "+%Y-%m-%d %H:%M:%S"` UTC"
        BUILD_OS="`${UNAME} -s`"
        BUILD_MACHINE="`${UNAME} -m`"
        BUILD_HOSTNAME="`${UNAME} -n`"
        BUILD_KERNEL="`${UNAME} -r`"
        if test ! x"${AWK}" = xNo; then
                BUILD_USER="`${FINGER} -lp $(echo "$USER") | ${HEAD} -n 1 | ${AWK} -F:\  '{print $3}'`"
        else
                BUILD_USER="`${WHOAMI}`"
        fi
	AC_DEFINE_UNQUOTED([BUILD_DATE],"`echo ${BUILD_DATE}`",[The date of this build])
	AC_DEFINE_UNQUOTED([BUILD_OS],"`echo ${BUILD_OS}`",[Operating System we are building on])
	AC_DEFINE_UNQUOTED([BUILD_MACHINE],"`echo ${BUILD_MACHINE}`",[Machine we are building on])
	AC_DEFINE_UNQUOTED([BUILD_HOSTNAME],"`echo ${BUILD_HOSTNAME}`",[Hostname of our Box])
	AC_DEFINE_UNQUOTED([BUILD_KERNEL],"`echo ${BUILD_KERNEL}`",[Kernel version of this build])
	AC_DEFINE_UNQUOTED([BUILD_USER],"`echo ${BUILD_USER}`",[building user])
	AC_SUBST([BUILD_DATE])
	AC_SUBST([BUILD_OS])
	AC_SUBST([BUILD_MACHINE])
	AC_SUBST([BUILD_HOSTNAME])
	AC_SUBST([BUILD_KERNEL])
	AC_SUBST([BUILD_USER])
    fi
fi

ac_default_prefix=/usr
if test ${sysconfdir} = '${prefix}/etc'; then
  sysconfdir=/etc
fi
if test ${mandir} = '${prefix}/man'; then
  mandir=/usr/share/man
fi
CONFIGURE_PART([Checking host platform:])
case "${host}" in
  *-*-darwin*)
        AC_DEFINE([__Darwin__],,[Define if Darwin])
        AC_SUBST(__Darwin__)
	no_libcap=yes
	ostype=bsd
        ;;
  *-*-freebsd*)
	no_libcap=yes
	ostype=bsd
        ;;
  *-*-netbsd*)
	no_libcap=yes
	ostype=bsd
	;;
  *-*-openbsd*)
	no_libcap=yes
	ostype=bsd
	;;
  *-*-dragonfly*)
	no_libcap=yes
	ostype=bsd
	;;
  *-aix*)
    AC_DEFINE(AIX,,[Define if AIX])
     broken_types=yes
	no_libcap=yes
	ostype=aix
    ;;
  *-osf4*)
    AC_DEFINE(OSF1,,[Define if OSF1])
    tru64_types=yes
	no_libcap=yes
	ostype=osf
    ;;
  *-osf5.1*)
    AC_DEFINE(OSF1)
	no_libcap=yes
	ostype=osf
    ;;
  *-tru64*)
    AC_DEFINE(OSF1)
	tru64_types=yes
	no_libcap=yes
	ostype=osf
    ;;
  *-*-linux*)
	ostype=linux
	LARGEFILE_FLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
	CFLAGS="$CFLAGS $LARGEFILE_FLAGS"
        ;;
  *cygwin*)
        AC_DEFINE([_WIN32_WINNT],[0x0500],[Heya, it's windows])
        AC_DEFINE([INET_ADDRSTRLEN],[16],[cygwin detection does not work for that, anybody has an idea ?])
        AC_DEFINE([INET6_ADDRSTRLEN],[46],[cygwin detection does not work for that, anybody has an idea ?])
	AC_DEFINE([__CYGWIN__],[1],[make sure __CYGWIN__ is defined ...])
	ostype=cygwin
        ;;
  *-*-solaris2*)
        AC_DEFINE([SOLARIS],[1],[needed for optional declarations to be visible])
	no_libcap=yes
	ostype=solaris
	force_generic_timers=yes
        ;;
  *)
        AC_MSG_RESULT(Unsupported operating system: ${host})
	no_libcap=yes
	ostype=unknown
        ;;
esac  
AC_SUBST(ostype)

# This needs to be before any macros that use the C compiler
AC_GNU_SOURCE

# cross-compile checks
if test "$host" = "$build"; then
	HOST_CC="${CC}"
else
	HOST_CC="${HOST_CC-gcc}"
fi
AC_CHECK_PROG(have_host_cc, ${HOST_CC}, yes, no)
if test "$have_host_cc" = "no"; then
	AC_MSG_ERROR(No valid host compiler set with HOST_CC)
fi
AC_SUBST(HOST_CC)

dnl Clang defaults to gnu99 mode, while asterisk needs gnu89
case $CC in
 clang)
 CFLAGS="$CFLAGS -std=gnu89"
 ;;
esac

# Checks for programs.
CONFIGURE_PART([Checking for standard programs:])
AC_PATH_PROGS(GREP, ggrep grep,[echo Missing grep so skipping but I doubt we will get anywhere])
AC_PATH_PROGS(SVN, svn, [echo Missing subversion so some stuff will be borked],${PATH}:/opt/csw/bin)
AC_PATH_PROGS(SHELL,bash sh,[echo No compatible shell found])
AC_PATH_PROGS(SH,bash sh,[echo No compatible shell found])
AC_PATH_PROGS(M4,gm4 m4,[echo No m4 found, who will process my macros now ?])
AC_PATH_PROGS(SED,gsed sed,[echo sed not found, doh!])
AC_PATH_PROGS(CAT,cat,[echo cat not found, Doh!])
AC_PATH_PROGS(TR,tr,[echo tr not found, need this for upper/lowercase conversions])
AC_PATH_PROGS(UNAME,uname,[echo uname not found so no version info will be available])
AC_PATH_PROGS(WHOAMI,whoami,[echo whoami not found so no version info will be available])
AC_PATH_PROGS(RPMBUILD,rpmbuild,[echo rpmbuild not found so you cannot build rpm packages (no problem)])
AC_PROG_CC
AC_PROG_CC_C_O
AC_PROG_CXX
AC_PROG_GCC_TRADITIONAL
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LIBTOOL   
AC_PROG_AWK
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_FUNC_STRERROR_R
AC_LANG_C
AC_C_CONST
AC_C_INLINE 		dnl wanted by: src/chan_sccp.h:138
ACX_PTHREAD 

# LibTool
CONFIGURE_PART([Checking Libtool:])
LT_PREREQ([2.0.0])
LT_INIT([dlopen])
LTDL_INIT([])
if test "x$with_included_ltdl" != "xyes"; then
  save_CFLAGS="$CFLAGS"
  save_LDFLAGS="$LDFLAGS"
  CFLAGS="$CFLAGS $LTDLINCL"
  LDFLAGS="$LDFLAGS $LIBLTDL"
  AC_CHECK_LIB([ltdl], [lt_dladvise_init],
                [],
        [AC_MSG_ERROR([installed libltdl is too old])])
  LDFLAGS="$save_LDFLAGS"
  CFLAGS="$save_CFLAGS"
fi
AC_SUBST([LIBTOOL_DEPS])

LIBS_save=$LIBS
LIBS="$LIBS"

# Check for headers, structures, typedefs, libs etc which are not related to specific add-on packages
CONFIGURE_PART([Checking for Required Libraries:])
dnl check for required libraries (also for add-ons)
AC_CHECK_LIB([c], [main])
AC_CHECK_LIB([pthread], [main])
AC_CHECK_LIB([socket], [main])
AC_CHECK_HEADERS([sys/ioctl.h]) 
AC_CHECK_HEADERS([sys/socket.h])
AC_CHECK_HEADERS([netinet/in.h])
AC_CHECK_HEADERS([pthread.h])

dnl AC_FUNC_MALLOC
dnl AC_FUNC_REALLOC
AC_CHECK_FUNCS([gethostbyname inet_ntoa memset mkdir select socket strsep strcasecmp strchr strdup strerror strncasecmp strerror strchr malloc calloc realloc free]) 

AC_HEADER_STDC    
AC_HEADER_STDBOOL 
AC_CHECK_HEADERS([netinet/in.h fcntl.h])

AC_STRUCT_TM
AC_STRUCT_TIMEZONE

dnl check compiler specifics
AC_C_INLINE
AC_C_CONST 
AC_C_VOLATILE

AC_TYPE_INT32_T
AC_TYPE_INT64_T
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T
dnl AC_TYPE_UINT16_T 
dnl AC_TYPE_UINT32_T 
dnl AC_TYPE_UINT8_T
dnl check declarations
AC_CHECK_DECLS(INET_ADDRSTRLEN,[],[],[#if HAVE_NETINET_IN_H
# include <netinet/in.h>
# endif
#if HAVE_W32API_WS32TCPIP_H
# include w32api/windows.h
# include w32api/winsock2.h  
# include w32api/ws2tcpip.h
#endif
])
AC_CHECK_DECLS(INET6_ADDRSTRLEN,[],[],[#if HAVE_NETINET_IN_H
# include <netinet/in.h>
# endif
#if HAVE_W32API_WS32TCPIP_H
# include w32api/windows.h
# include w32api/winsock2.h
# include w32api/ws2tcpip.h
#endif
])   
# more type checks, horrible shit
if test "$tru64_types" = "yes"; then
        AC_CHECK_TYPE(u_int8_t, unsigned char)
        AC_CHECK_TYPE(u_int16_t, unsigned short)
        AC_CHECK_TYPE(u_int32_t, unsigned int)
else
        if test "$broken_types" = "yes" ; then
                AC_CHECK_TYPE(u_int8_t, unsigned char)
                AC_CHECK_TYPE(u_int16_t, unsigned short)
                AC_CHECK_TYPE(u_int32_t, unsigned long int)
        else
                AC_CHECK_TYPE(u_int8_t, uint8_t)
                AC_CHECK_TYPE(u_int16_t, uint16_t)
                AC_CHECK_TYPE(u_int32_t, uint32_t)
        fi
fi


dnl
dnl Check for svn2cl for generating ChangeLog
dnl
enable_svn2cl=yes
AC_PATH_PROG([SVN2CL], [svn2cl])
if test -z "$SVN2CL"; then
  enable_svn2cl=no
fi

AM_CONDITIONAL(ENABLE_SVN2CL, test x$enable_svn2cl != xno)

AC_ARG_WITH(changelog-oldest,
	    AC_HELP_STRING([--with-changelog-oldest=NUMBER],
			   [Oldest revision to include in ChangeLog]))

CHANGELOG_OLDEST=1021
if test "x$with_changelog_oldest" != "x" ; then
  CHANGELOG_OLDEST=$with_changelog_oldest
fi
AC_SUBST(CHANGELOG_OLDEST) 


# Big Endian / Little Endian	
AC_C_BIGENDIAN(AC_DEFINE([__BYTE_ORDER],__BIG_ENDIAN,[Big Endian]),AC_DEFINE([__BYTE_ORDER],__LITTLE_ENDIAN,[Little Endian]))
AC_DEFINE([__LITTLE_ENDIAN],1234,[for the places where it is not defined])
AC_DEFINE([__BIG_ENDIAN],4321,[for the places where it is not defined])

# Configure Options
CONFIGURE_PART([Checking Configure Options:])


PBX_PATH="$prefix /usr /usr/local/ssl /usr/lib/ssl /usr/ssl /usr/pkg /usr/local /usr/sfw";
AC_ARG_WITH([asterisk],
    [AC_HELP_STRING([--with-asterisk=PATH],[Location of the Asterisk installation])],[PBX_PATH="${withval}"],)
    if test "x${PBX_PATHl}" = "xyes"; then 
    	PBX_PATH="$prefix /usr /usr/local/ssl /usr/lib/ssl /usr/ssl /usr/pkg /usr/local /usr/sfw"; 
    fi
AC_ARG_WITH([callweaver],
    [AC_HELP_STRING([--with-callwaver=PATH],[Location of the Callweaver installation])],[PBX_PATH="${withval}"],)
    if test "x${PBX_PATH}" = "xyes"; then 
    	PBX_PATH="$prefix /usr /usr/local/ssl /usr/lib/ssl /usr/ssl /usr/pkg /usr/local /usr/sfw"; 
    fi
dnl AC_ARG_WITH(asterisk-includes,
dnl     AS_HELP_STRING([--with-asterisk-includes=PATH], [Path to Asterisk includes (defaults to PREFIX/include)]),
dnl     [ASTERISK_CFLAGS="-I$withval"])
dnl AC_ARG_WITH(asterisk-libs,
dnl     AS_HELP_STRING([--with-asterisk-libs=PATH], [Path to Asterisk includes (defaults to PREFIX/lib)]),
dnl     [ASTERISK_LDFLAGS="-L$withval"])
dnl AC_ARG_WITH(callweaver-includes,
dnl     AS_HELP_STRING([--with-callweaver-includes=PATH], [Path to CallWeaver includes (defaults to PREFIX/include)]),
dnl     [CALLWEAVER_CFLAGS="-I$withval"])
dnl AC_ARG_WITH(callweaver-libs,
dnl     AS_HELP_STRING([--with-callweaver-libs=PATH], [Path to CallWeaver includes (defaults to PREFIXp/lib)]),
dnl     [CALLWEAVER_LDFLAGS="-L$withval"])
   
CFLAGS_saved="$CFLAGS"
CPPFLAGS_saved="$CPPFLAGS"
LDFLAGS_saved="$LDFLAGS"
AC_SUBST([PBX_PATH])
PBX_MANDATORY="yes"
CS_CHECK_PBX

if test "${PBX_TYPE}" = "Asterisk"; then
   AC_DEFINE([PBX_TYPE],"ASTERISK",[PBX Type])
   dnl Figure out the Asterisk Version
   GET_ASTERISK_VERSION
   dnl Run Standard Asterisk Header Tests
   FIND_ASTERISK_HEADERS
   dnl Check the found Asterisk for their content
   CHECK_ASTERISK_HEADER_CONTENT
elif test "${PBX_TYPE}" = "Callweaver"; then
   AC_DEFINE([PBX_TYPE],"|CALLWEAVER",[PBX Type])
   dnl Figure out the Asterisk Version
   echo "We are working on a Callweaver version"
else
   echo ""
   echo ""
   echo "PBX type could not be determined"
   echo "================================"
   echo "Either install asterisk and asterisk-devel packages"
   echo "Or specify the location where asterisk can be found, using ./configure --with-asterisk=[path]"
   exit
fi
AC_SUBST([PBX_TYPE])

dnl echo "CFLAGS: $CFLAGS"
dnl echo "CPPFLAGS: $CPPFLAGS"
dnl echo "LDFLAGS: $LDFLAGS"

dnl Doxygen
CONFIGURE_PART([Checking for Doxygen:])
AC_ARG_ENABLE(devdoc, 
  AC_HELP_STRING([--enable-devdoc], [enable developer documentation]), 
  ac_cv_use_devdoc=$enableval, ac_cv_use_devdoc=no)
AS_IF([test "${ac_cv_use_devdoc}" == "yes"], 
  [DX_ENV_APPEND([INPUT],[. doc src])],
  [DX_ENV_APPEND([INPUT],[. doc])]
)
AC_MSG_NOTICE([--enable-devdoc: ${ac_cv_use_devdoc}])
DX_HTML_FEATURE(ON)
DX_CHM_FEATURE(OFF)
DX_CHI_FEATURE(OFF)
DX_MAN_FEATURE(ON)
DX_RTF_FEATURE(OFF)
DX_XML_FEATURE(OFF)
DX_PDF_FEATURE(OFF)
DX_PS_FEATURE(OFF)
DX_INIT_DOXYGEN($PACKAGE, doc/doxygen.cfg)

dnl Optimize for host cpu version
AC_ARG_ENABLE(optimization,     
	[AC_HELP_STRING([--disable-optimization],[no detection or tuning flags for cpu version])],
	OPTIMIZECPU=$enableval,OPTIMIZECPU=yes)

dnl Enable debugging
if test "${SCCP_BRANCH}" == "TRUNK"; then 
	strip_binaries="no"
        GDB_FLAGS="-g"
else 
	strip_binaries="yes"
        GDB_FLAGS=""
fi
AC_MSG_NOTICE([--enable-optimization: ${OPTIMIZECPU}])

AC_ARG_ENABLE(debug,
	[AC_HELP_STRING([--enable-debug],[enable debug information])],enable_debug=$enableval,enable_debug=no)
if test "${enable_debug}" = "yes"; then
   AC_DEFINE([GC_DEBUG],[1],[Enable extra garbage collection debugging.])
   AC_DEFINE([DEBUG],[1],[Extra debugging.])
   enable_do_crash="yes"
   enable_debug_mutex="yes"
   strip_binaries="no"
   CFLAGS_saved="$CFLAGS_saved -O0 -Os -Wall -Wextra -Wno-unused-parameter"
   CFLAGS="$CFLAGS_saved"
   GDB_FLAGS="-g"
else
   AC_DEFINE([DEBUG],[0],[Extra debugging.])
   enable_do_crash="no"
   enable_debug_mutex="no"
   strip_binaries="yes"
   GDB_FLAGS="$GDB_FLAGS"
fi
AC_MSG_NOTICE([--enable-debug: ${enable_debug}])
AM_CONDITIONAL([WANT_DEBUG],[test "${enable_debug}" = "yes"])
AC_SUBST([strip_binaries])
AC_SUBST([GDB_FLAGS])

dnl Add Arguments to configure
AC_ARG_ENABLE(pickup, 
  AC_HELP_STRING([--disable-pickup], [disable pickup function]), 
  ac_cv_use_pickup=$enableval, ac_cv_use_pickup=yes)
	AS_IF([test "${ac_cv_use_pickup}" == "yes"], [
        	AC_DEFINE(CS_SCCP_PICKUP, 1, [pickup function enabled])
])
AC_MSG_NOTICE([--enable-pickup: ${ac_cv_use_pickup}])

AC_ARG_ENABLE(park, 
  AC_HELP_STRING([--disable-park], [disable park functionality]), 
  ac_cv_use_park=$enableval, ac_cv_use_park=yes)
	AS_IF([test "${ac_cv_use_park}" == "yes"], [
        	AC_DEFINE(CS_SCCP_PARK, 1, [park functionality enabled])
])
AC_MSG_NOTICE([--enable-park: ${ac_cv_use_park}])

AC_ARG_ENABLE(dirtrfr, 
  AC_HELP_STRING([--disable-dirtrfr], [disable direct transfer]), 
  ac_cv_use_dirtrfr=$enableval, ac_cv_use_dirtrfr=yes)
	AS_IF([test "${ac_cv_use_dirtrfr}" == "yes"], [
        	AC_DEFINE(CS_SCCP_DIRTRFR, 1, [direct transfer enabled])
])
AC_MSG_NOTICE([--enable-dirtrfr: ${ac_cv_use_dirtrfr}])

AC_ARG_ENABLE(monitor, 
  AC_HELP_STRING([--disable-monitor], [disable feature monitor)]), 
  ac_cv_use_monitor=$enableval, ac_cv_use_monitor=yes)
	AS_IF([test "${ac_cv_use_monitor}" == "yes"], [
        	AC_DEFINE(CS_SCCP_FEATURE_MONITOR, 1, [feature monitor enabled])
])
AC_MSG_NOTICE([--enable-monitor: ${ac_cv_use_monitor}])

AC_ARG_ENABLE(conference, 
  AC_HELP_STRING([--enable-conference], [enable conference (>ast 1.6.2)(experimental)]), 
  ac_cv_use_conference=$enableval, ac_cv_use_conference=no)
	AS_IF([test "${ac_cv_use_conference}" == "yes"], [
        	AC_DEFINE(CS_SCCP_CONFERENCE, 1, [conference enabled])
])
AC_MSG_NOTICE([--enable-conference: ${ac_cv_use_conference}])

AC_ARG_ENABLE(manager, 
  AC_HELP_STRING([--disable-manager], [disabled ast manager events]), 
  ac_cv_use_manager=$enableval, ac_cv_use_manager=yes)
	AS_IF([test "${ac_cv_use_manager}" == "yes"], [
        	AC_DEFINE(CS_MANAGER_EVENTS, 1, [manager events enabled])
	        AC_DEFINE(CS_SCCP_MANAGER, 1, [manager console control enabled])
])
AC_MSG_NOTICE([--enable-manager: ${ac_cv_use_manager}])

AC_ARG_ENABLE(functions, 
  AC_HELP_STRING([--disable-functions], [disabled Dialplan functions]), 
  ac_cv_use_functions=$enableval, ac_cv_use_functions=yes)
	AS_IF([test "${ac_cv_use_functions}" == "yes"], [
	        AC_DEFINE(CS_SCCP_FUNCTIONS, 1, [dialplan function enabled])
])
AC_MSG_NOTICE([--enable-functions: ${ac_cv_use_functions}])

AC_ARG_ENABLE(indications, 
  AC_HELP_STRING([--enable-indications], [enabled debug indications]), 
  ac_cv_debug_indications=$enableval, ac_cv_debug_indications=no)
	AS_IF([test "${ac_cv_debug_indications}" == "yes"], [
        	AC_DEFINE(CS_DEBUG_INDICATIONS, 1, [debug indications enabled])
])
AC_MSG_NOTICE([--enable-indications: ${ac_cv_debug_indications}])

AC_ARG_ENABLE(realtime, 
  AC_HELP_STRING([--disable-realtime], [disabled realtime support]), 
  ac_cv_realtime=$enableval, ac_cv_realtime=yes)
    AS_IF([test "${ac_cv_realtime}" == "yes"], [
    	AC_DEFINE(CS_SCCP_REALTIME, 1, [realtime enabled])
])
AC_MSG_NOTICE([--enable-realtime: ${ac_cv_realtime}])

AC_ARG_ENABLE(feature_monitor, 
  AC_HELP_STRING([--enable-feature-monitor], [enabled feature monitor]), 
  ac_cv_feature_monitor=$enableval, ac_cv_feature_monitor=no)
    AS_IF([test "${ac_cv_feature_monitor}" == "yes"], [
       	AC_DEFINE(CS_SCCP_FEATURE_MONITOR, 1, [feature monitor enabled])
])
AC_MSG_NOTICE([--enable-feature-monitor: ${ac_cv_feature_monitor}])

AC_ARG_ENABLE(advanced_functions, 
  AC_HELP_STRING([--enable-advanced-functions], [enabled advanced functions (experimental)]), 
    ac_cv_advanced_functions=$enableval, ac_cv_advanced_functions=no)
    AS_IF([test "${ac_cv_advanced_functions}" == "yes"], [
       	AC_DEFINE(CS_ADV_FEATURES, 1, [advanced functions enabled])
])
AC_MSG_NOTICE([--enable-advanced-functions: ${ac_cv_advanced_functions}])

AC_ARG_ENABLE(experimental_mode, 
  AC_HELP_STRING([--enable-experimental-mode], [enabled experimental mode (only for developers)]), 
    ac_cv_experimental_mode=$enableval, ac_cv_experimental_mode=no)
    AS_IF([test "${ac_cv_experimental_mode}" == "yes"], [
       	AC_DEFINE(CS_EXPERIMENTAL, 1, [experimental mode enabled])
])
AC_MSG_NOTICE([--enable-experimental-mode: ${ac_cv_experimental_mode} (only for developers)])

AC_ARG_ENABLE(devstate_feature, 
  AC_HELP_STRING([--enable-devstate-feature], [enabled device state feature button]), 
    ac_cv_devstate_feature=$enableval, ac_cv_devstate_feature=no)
    AS_IF([test "${ac_cv_devstate_feature}" == "yes"], [
       	AC_DEFINE(CS_DEVSTATE_FEATURE, 1, [devstate feature enabled])
])
AC_MSG_NOTICE([--enable-devstate-feature: ${ac_cv_devstate_feature}])

AC_ARG_ENABLE(dynamic_speeddial, 
  AC_HELP_STRING([--disable-dynamic-speeddial], [disable dynamic speeddials]), 
  ac_cv_dynamic_speeddial=$enableval, ac_cv_dynamic_speeddial=yes)
    AS_IF([test "${ac_cv_dynamic_speeddial}" == "yes"], [
       	AC_DEFINE(CS_DYNAMIC_SPEEDDIAL, 1, [dynamic speeddials enabled])
])
AC_MSG_NOTICE([--enable-dynamic-speeddial: ${ac_cv_dynamic_speeddial}])

AC_ARG_ENABLE(dynamic_speeddial_cid, 
  AC_HELP_STRING([--disable-dynamic-speeddial-cid], [disable dynamic speeddials with call info]), 
  ac_cv_dynamic_speeddial_cid=$enableval, ac_cv_dynamic_speeddial_cid=yes)
AS_IF([test "${ac_cv_dynamic_speeddial_cid}" == "yes"], [
       	AC_DEFINE(CS_DYNAMIC_SPEEDDIAL, 1, [dynamic speeddials enabled])
       	AC_DEFINE(CS_DYNAMIC_SPEEDDIAL_CID, 1, [dynamic speeddials with callinfo enabled])
])
AC_MSG_NOTICE([--enable-dynamic-speeddial_cid: ${ac_cv_dynamic_speeddial_cid}])

AC_ARG_ENABLE(video, 
  AC_HELP_STRING([--enable-video], [enable streaming video (experimental)]), 
  ac_cv_streaming_video=$enableval, ac_cv_streaming_video=no)
AS_IF([test "${ac_cv_streaming_video}" == "yes"], [
       	AC_DEFINE(CS_SCCP_VIDEO, 1, [Using streaming video])
])
AC_MSG_NOTICE([--enable-video: ${ac_cv_streaming_video}])

dnl << Temporary additions. For Development Only
AC_ARG_ENABLE(dynamic_config, 
  AC_HELP_STRING([--disable-dynamic-config], [disable sccp reload]), 
  ac_cv_dynamic_config=$enableval, ac_cv_dynamic_config=yes)
    AS_IF([test "${ac_cv_dynamic_config}" == "yes"], [
       	AC_DEFINE(CS_DYNAMIC_CONFIG, 1, [sccp reload enabled])
])
AC_MSG_NOTICE([--enable-dynamic-config: ${ac_cv_dynamic_config}])
dnl Temporary additions. For Development Only >>

AC_ARG_WITH(
  libgc,
  [AC_HELP_STRING(
     [--with-libgc=yes|no],
     [use libgc as allocator])],
  uselibgc="$withval"
)

if test "x$uselibgc" = "xyes"; then
    AC_CHECK_LIB(gc,GC_malloc,
      [
         AC_CHECK_LIB(gc,GC_pthread_create,
            [
               AC_DEFINE(HAVE_LIBGC, 1, [Define to 1 if libgc is available])
	       GCLIBS="-lgc"
	       GCFLAGS="-DGC_LINUX_THREADS -D_REENTRANT"
	       msg_gc=yes
            ]
	)
      ],
      AC_MSG_ERROR(*** LIBGC support will not be built (LIBGC library not found) ***)
    )
fi
if test "${enable_debug}" = "yes"; then
	GCFLAGS="$GCFLAGS -DGC_FIND_LEAK -DGC_PRINT_STATS"
fi
AC_SUBST(GCLIBS)
AC_SUBST(GCFLAGS)

dnl Return CFLAGS / CPPFLAGS
CFLAGS=${CFLAGS_saved}
CPPFLAGS=${CPPFLAGS_saved}
LDFLAGS=${LDFLAGS_saved}

dnl Set Module Directory
if test "x${prefix}" != "xNONE"; then
  if test "${build_cpu}" = "x86_64"; then
dnl	asterisk do not respect the x64 arch, so we havt to copy to lib
dnl  	csmoddir=${prefix}/lib64/asterisk/modules;
  	csmoddir=${prefix}/lib/asterisk/modules;
  else
  	csmoddir=${prefix}/lib/asterisk/modules;
  fi
elif test -z "${csmoddir}"; then
   csmoddir="${DESTDIR}${PBX_MODDIR}"
   # directory for modules
   if test -z "${csmoddir}"; then
     # fallback to asterisk modules directory
     csmoddir="${PBX_LIB}/asterisk/modules"
   fi
fi
AC_SUBST([csmoddir])

# substitutes
AC_SUBST(SVN)
AC_SUBST(GREP)
AC_SUBST(CPU_OPTIONS)
AC_SUBST(prefix)
AC_SUBST(RPMBUILD)


CONFIGURE_PART([Generating Configuration and Makefiles])
AC_CONFIG_FILES([
   Makefile
   README
   doc/Makefile
   src/Makefile
])

AH_BOTTOM([
#endif /* CHAN_SCCP_CONFIG_H */
])

VERSION="`echo ${SCCP_VERSION}_${SCCP_BRANCH}`"
PACKAGE_STRING="`echo Chan_SCCP_${VERSION}`"
PACKAGE_TARNAME="`echo Chan_SCCP_${VERSION}`"
AC_SUBST([VERSION])
AC_SUBST([PACKAGE_STRING])
AC_SUBST([PACKAGE_TARNAME])

AC_OUTPUT
#
# Fixing the PACKAGE_* redefines    
#
# because AM_INIT_MAKE([no-define]) doesn't work anymore since autoconf v2.59 we have to resort to remarking out 
# the generated PACKAGE_* defines.
# See: http://www.mail-archive.com/automake@gnu.org/msg04576.html
# 
# Untill the Asterisk groups stops exporting these PACKAGE_ defines or autoconf fixes this issue, these replacements will
# have to remain.
#
# we are not using the PACKAGE_ define in any of the sources
#
sed -e "s/^\(\#define PACKAGE_[A-Z]*\)$/\/\* \1 \*\//g" src/config.h >src/config.h.tmp && mv src/config.h.tmp src/config.h
sed -e "s/^\(\#undef PACKAGE_[A-Z]*\)$/\/\* \1 \*\//g" src/config.h.in >src/config.h.in.tmp && mv src/config.h.in.tmp src/config.h.in

echo
echo "Operating System : $BUILD_OS"
echo "          Kernel : $BUILD_KERNEL"
echo "    Architecture : $BUILD_MACHINE"
echo "Asterisk Version : $ASTERISK_VER"
echo "      Build user : $BUILD_USER"
echo "         Version : ${SCCP_VERSION}_${SCCP_BRANCH}_r${SCCP_REVISION}"
#echo "      CPU -march : $march"
echo "          CFLAGS : ${CFLAGS} ${AM_CFLAGS} ${PBX_CFLAGS} ${GDB_FLAGS} ${PTHREAD_CFLAGS} ${GCLIBS}"
echo "         LDFLAGS : ${LDFLAGS} ${PBX_LDFLAGS} ${PTHREAD_LIBS} ${GCLIBS}"
echo "        PBX_TYPE : $PBX_TYPE"
echo "         PBX_LIB : $PBX_LIB"
echo "     PBX_INCLUDE : $PBX_INCLUDE"
echo "          config : /etc"
echo "         modules : ${csmoddir}"
