diff -Naur chan_sccp-20071009-DD/chan_sccp.h chan_sccp-20071101/chan_sccp.h
--- chan_sccp-20071009-DD/chan_sccp.h	2007-11-01 18:37:50.000000000 +0100
+++ chan_sccp-20071101/chan_sccp.h	2007-11-01 18:50:06.000000000 +0100
@@ -123,7 +123,7 @@
 #define htoles(x) bswap_16(x)
 #endif
 
-#define SCCP_VERSION "20070825"
+#define SCCP_VERSION "20071101"
 #define SCCP_LOCK_TRIES 10
 #define SCCP_LOCK_USLEEP 100
 
diff -Naur chan_sccp-20071009-DD/patches/blindtransfer_GPickUp.patch chan_sccp-20071101/patches/blindtransfer_GPickUp.patch
--- chan_sccp-20071009-DD/patches/blindtransfer_GPickUp.patch	1970-01-01 01:00:00.000000000 +0100
+++ chan_sccp-20071101/patches/blindtransfer_GPickUp.patch	2007-11-01 19:04:36.000000000 +0100
@@ -0,0 +1,12 @@
+diff -Naur chan_sccp-20071009-DD/chan_sccp.h chan_sccp-20071101/chan_sccp.h
+--- chan_sccp-20071009-DD/chan_sccp.h	2007-11-01 18:37:50.000000000 +0100
++++ chan_sccp-20071101/chan_sccp.h	2007-11-01 18:50:06.000000000 +0100
+@@ -123,7 +123,7 @@
+ #define htoles(x) bswap_16(x)
+ #endif
+ 
+-#define SCCP_VERSION "20070825"
++#define SCCP_VERSION "20071101"
+ #define SCCP_LOCK_TRIES 10
+ #define SCCP_LOCK_USLEEP 100
+ 
diff -Naur chan_sccp-20071009-DD/sccp_channel.c chan_sccp-20071101/sccp_channel.c
--- chan_sccp-20071009-DD/sccp_channel.c	2007-11-01 18:37:49.000000000 +0100
+++ chan_sccp-20071101/sccp_channel.c	2007-11-01 18:48:56.000000000 +0100
@@ -884,14 +884,20 @@
 
 	if (c->state == SCCP_CHANNELSTATE_RINGOUT) {
 		sccp_log(1)(VERBOSE_PREFIX_3 "%s: Blind transfer. Signalling ringing state to %s\n", d->id, transferred->name);
-
-
 	}
 
-	ast_queue_hangup(peer->owner);
+	
+	ast_mutex_lock(&d->lock);
+	if (peer->owner)
+		ast_queue_hangup(peer->owner);
+	else {
+		sccp_log(1)(VERBOSE_PREFIX_3 "Peer owner disappeared! Can't free ressources\n");
+		ast_mutex_unlock(&d->lock);
+		return;
+	}
 	ast_mutex_unlock(&transferee->lock);
+	//ast_mutex_lock(&d->lock);
 
-	ast_mutex_lock(&d->lock);
 	d->transfer_channel = NULL;
 	ast_mutex_unlock(&d->lock);
 
diff -Naur chan_sccp-20071009-DD/sccp_pbx.c chan_sccp-20071101/sccp_pbx.c
--- chan_sccp-20071009-DD/sccp_pbx.c	2007-11-01 18:37:49.000000000 +0100
+++ chan_sccp-20071101/sccp_pbx.c	2007-11-01 18:46:42.000000000 +0100
@@ -730,7 +730,7 @@
 	/*sccp_log(1)( VERBOSE_PREFIX_3 "CS_AST_CHANNEL_PVT: %s\n", chan->tech_pvt);*/
 
 	c = CS_AST_CHANNEL_PVT(chan);
-	if (!c) {
+	if (!c || !c->device || !c->device->id) {
 		/* let's go out as soon as possibile */
 		if (!ast_test_flag(chan, AST_FLAG_ZOMBIE)) {
 			ast_log(LOG_ERROR, "SCCP: return from the dial thread. No sccp channel available for %s\n", (chan) ? chan->name : "(null)");
@@ -741,6 +741,16 @@
 		}
 		return NULL;
 	}
+	if (strncmp(c->device->id,"SEP",3)!=0 && strncmp(c->device->id,"ATA",3)!=0) {
+		if (!ast_test_flag(chan, AST_FLAG_ZOMBIE)) {
+			sccp_log(1)( VERBOSE_PREFIX_3 "SCCP: return from the dial thread. No sccp channel available for %s\n", (chan) ? chan->name : "(null)");
+				if (chan)
+					ast_hangup(chan);
+		} else {
+			sccp_log(1)( VERBOSE_PREFIX_3 "SCCP: return from the dial thread. No sccp channel available for zombie\n");
+		}
+		return NULL;
+	}
 	
 	/* this is an outgoung call */
 	ast_mutex_lock(&c->lock);
